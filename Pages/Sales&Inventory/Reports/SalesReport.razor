@using ABC.Shared.Models
@page "/SalesReport"

@*@{
    var orderDetails = (List<Models.OrderDetail>)ViewBag.OrderDetails;
}*@

<link rel="stylesheet" href="~/css/report.css" />

<div class="container-fluid pt-2 pb-5">
    <!--TITLE-->
    <div class="row pb-1">
        <div class="col-lg-8 col-sm-12 text-start mb-3 mb-sm-0">
            <h1 style="color: #223442;"><b>Sales Report</b></h1>
        </div>
        <!-- Export Button -->
        <div class="col-lg-4 col-sm-4 mb-3 mb-sm-0 text-end">
            <a href="#" class="btn btn-success" id="btngenerate">
                <i class="bi bi-box-arrow-up"></i> Export
            </a>
        </div>
    </div>
    <!--Breadcrumb-->
    <div class="row pb-3">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item active" aria-current="page">Sales Report</li>
                <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Report" asp-action="InvIndex">Inventory Report</a></li>
            </ol>
        </nav>
    </div>
    <div class="row pt-1 pb-2">
        <div class="col-4">
            <div class="smallbox">
                <p>Total Revenue</p>
                <h2 style="color: #305B78;">
                    @*<strong>Php @ViewBag.SalesRevenue</strong>*@
                </h2>
            </div>
        </div>
        <div class="col-4">
            <div class="smallbox">
                <span>
                    <p>Total Sales</p>
                    @*<h2 style="color: #B5603A;"><strong>@ViewBag.NumberOfItemsSold</strong></h2>*@
                </span>
            </div>
        </div>
        <div class="col-4">
            <div class="smallbox">
                <p>Total Profit</p>
                @*<h2 style="color: #146128;"><strong>Php @ViewBag.Profit</strong></h1>*@
            </div>
        </div>
    </div>

    <div class="row pt-3 pb-2">
        <div class="col-7">
            <div class="border p-3 container shadow">
                <!--Title-->
                <div class="row pb-2">
                    <h4 style="color: #223442;">Revenue</h4>
                    <hr />
                </div>
                <div class="barchart pb-3">
                    @*<canvas id="salesChart" salesRevenue="@ViewBag.SalesRevenue"></canvas>*@
                </div>
                
                <div class="row pt-2">
                    <div class="col-6">
                        <div class="smallbox">
                            <p>Walkin</p>
                            <h5 style="color: #223442;"><b>Php</b></h5>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="smallbox">
                            <p>On-call</p>
                            <h5 style="color: #223442;"><b>Php</b></h5>
                        </div>
                    </div>
                </div>
                <div class="row pt-2 pb-3">
                    <div class="col-6">
                        <div class="smallbox">
                            <p>Chat-based</p>
                            <h5 style="color: #223442;"><b>Php</b></h5>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="smallbox">
                            <p>Website</p>
                            <h5 style="color: #223442;"><b>Php</b></h5>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-5">
            <div class="border p-3 container shadow">
                <!-- Title -->
                <div class="row">
                    <h4 style="color: #223442;">Best Selling Items</h4>
                    <hr />
                </div>
                <table class="table table-hover scrollable-table">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Product</th>
                            <th>Qty.</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*
                        @foreach (var product in Model)
                        {
                            var totalSold = (int)orderDetails.Where(detail => detail.ProductId == product.Id).Sum(detail => detail.Count);
                            var totalPrice = orderDetails
                            .Where(detail => detail.ProductId == product.Id)
                            .Sum(detail => detail.Product != null ? (detail.Product.RetailPrice * detail.Count) : 0);

                            <tr>
                                <td><img src="@product.ImageUrl" alt="Product Image" width="50" height="50"></td>
                                <td>@product.productName</td>
                                <td>@totalSold</td>
                                <td>@String.Format("{0:C}", totalPrice)</td>
                            </tr>
                        } *@
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="//cdn.jsdelivr.net/npm/chart.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>
<script src="~/js/salesreport.js"></script>

@code{
    @*
    [Area("Admin")]
    [Authorize(Roles = SD.Role_Admin)]
    public class ReportController : Controller
    {
        private readonly AppDBContext _db;

        public ReportController(AppDBContext db)
        {
            _db = db;
        }

        public IActionResult Index()
        {
            // Sales Revenue
            double salesRevenue = _db.OrderHeaders
                .Where(order => order.PaymentStatus == "Paid")
                .Sum(order => order.OrderTotal);

            // Calculate Profit
            double totalProfit = _db.OrderHeaders
                .Where(order => order.PaymentStatus == "Paid")
                .SelectMany(order => _db.OrderDetails.Where(detail => detail.OrderHeaderId == order.Id))
                .Sum(detail => detail.Product != null ?
                    (detail.Price - detail.Product.CostPrice) * detail.Count : 0);

            // Number of Items Sold
            int numberOfItemsSold = _db.OrderHeaders
                .Where(order => order.PaymentStatus == "Paid")
                .SelectMany(order => _db.OrderDetails.Where(detail => detail.OrderHeaderId == order.Id))
                .Sum(detail => detail.Count);

            // Total Cost Price
            double totalCostPrice = _db.Products.Sum(product => product.CostPrice);

            var bestSellingProducts = _db.OrderDetails
        .Include(detail => detail.Product)
        .GroupBy(detail => detail.Product)
	.OrderByDescending(group => group.Sum(detail => detail.Count))
	.Select(group => group.Key)
	.ToList();

		ViewBag.SalesRevenue = salesRevenue;
		ViewBag.NumberOfItemsSold = numberOfItemsSold;
		ViewBag.Profit = totalProfit;
		ViewBag.TotalCostPrice = totalCostPrice;
		ViewBag.OrderDetails = _db.OrderDetails.ToList();

		return View(bestSellingProducts);
	}

	public IActionResult InvIndex()
	{
		int totalProducts = _db.Products.Count();
		ViewBag.TotalProducts = totalProducts;

		int totalCategories = _db.Categories.Count();
		ViewBag.TotalCategories = totalCategories; // Corrected ViewBag key

		int totalPurOrders = _db.PurchaseOrders.Count();
		ViewBag.TotalPurOrders = totalPurOrders;

		int instockProducts = _db.Products.Count(p => p.StockQuantity > 0);
		ViewBag.InstockProducts = instockProducts;

		int lowStockThreshold = 5;

		int lowStockProducts = _db.Products.Count(p => p.StockQuantity > 0 && p.StockQuantity <= lowStockThreshold); // Corrected condition
		ViewBag.LowStockProducts = lowStockProducts;

		int outOfStockProducts = _db.Products.Count(p => p.StockQuantity == 0);
		ViewBag.OutOfStockProducts = outOfStockProducts;

		return View();
	}
}
    *@
}